import tkinter as tk
from tkinter import messagebox
# Danh s√°ch c√¢u h·ªèi
questions = [
    "B·∫°n c√≥ c√≤n nhi·ªÅu b√†i t·∫≠p/ch∆∞a l√†m vi·ªác kh√¥ng?",
    "Ng√†y mai c√≥ vi·ªác h·ªçc/l√†m quan tr·ªçng kh√¥ng?",
    "B·∫°n c·∫£m th·∫•y m·ªát m·ªèi h√¥m nay kh√¥ng?",
    "B·∫°n ƒë√£ t·∫≠p th·ªÉ d·ª•c ho·∫∑c v·∫≠n ƒë·ªông h√¥m nay ch∆∞a?",
    "B·∫°n c√≥ h·ª©a v·ªõi b·∫°n b√® s·∫Ω ƒëi ch∆°i kh√¥ng?"
]
answers = []   # L∆∞u c√¢u tr·∫£ l·ªùi Yes/No
index = 0      # C√¢u h·ªèi hi·ªán t·∫°i

# H√†m x·ª≠ l√≠ c√¢u h·ªèi
def answer(response):
    global index
    answers.append(response)   # L∆∞u l·∫°i c√¢u tr·∫£ l·ªùi
    index += 1                 # Chuy·ªÉn sang c√¢u h·ªèi ti·∫øp theo
    if index < len(questions):
        label.config(text = questions[index])   # C·∫≠p nh·∫≠t c√¢u h·ªèi m·ªõi
    else:
        make_decision()                         # H·∫øt c√¢u h·ªèi th√¨ ƒë∆∞a ra quy·∫øt ƒë·ªãnh

# H√†m x·ª≠ l√≠ c√°c quy·∫øt ƒë·ªãnh t∆∞∆°ng ƒë∆∞∆°ng v·ªõi c√¢u tr·∫£ l·ªùi
def make_decision():
    if answers[0] == "Yes" or answers[1] == "Yes":
        decision = "B·∫°n n√™n ho√†n th√†nh vi·ªác h·ªçc/l√†m tr∆∞·ªõc"
    elif answers[2] == "Yes":
        decision = "B·∫°n n√™n ngh·ªâ ng∆°i v√† chƒÉm s√≥c s·ª©c kh·ªèe"
    elif answers[4] == "Yes":
        decision = "B·∫°n n√™n ƒëi ch∆°i v·ªõi b·∫°n b√® nh∆∞ ƒë√£ h·ª©a"
    else:
        decision = "üëå Kh√¥ng c√≥ g√¨ g·∫•p, b·∫°n c√≥ th·ªÉ th∆∞ gi√£n ho·∫∑c l√†m ƒëi·ªÅu m√¨nh th√≠ch"

    # Hi·ªán k·∫øt qu·∫£
    messagebox.showinfo("K·∫øt qu·∫£ quy·∫øt ƒë·ªãnh", decision)
    root.destroy()

# Giao di·ªán
root = tk.Tk()
root.title("C√≥ n√™n ƒëi ch∆°i kh√¥ng?")
root.geometry("450x200")

# Hi·ªÉn th·ªã c√¢u h·ªèi ƒë·∫ßu ti√™n
label = tk.Label(root, text=questions[index], font=("Arial", 12), wraplength=400)
label.pack(pady=25)

# Khung ch·ª©a n√∫t Yes/No
frame = tk.Frame(root)
frame.pack()
btn_yes = tk.Button(frame, text="Yes", width=12, command=lambda: answer("Yes"))
btn_no = tk.Button(frame, text="No", width=12, command=lambda: answer("No"))
btn_yes.grid(row=0, column=0, padx=15)
btn_no.grid(row=0, column=1, padx=15)
# Ch·∫°y ·ª©ng d·ª•ng
root.mainloop()
